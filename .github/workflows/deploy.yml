# Nome do workflow que aparecerá na aba "Actions" do GitHub
name: Deploy API to Azure VM

# Define o gatilho: rodar sempre que houver um push na branch "main"
on:
  push:
    branches: [ "main" ]

# Define as tarefas (jobs) a serem executadas
jobs:
  build-and-deploy:
    # Define o tipo de máquina que o robô do GitHub vai usar para trabalhar
    runs-on: ubuntu-latest

    # Define a sequência de passos
    steps:
      # Passo 1: Baixa o código do seu repositório para a máquina do robô
      - name: Checkout Code
        uses: actions/checkout@v4

      # Passo 2: Configura o ambiente Java (JDK 25) na máquina do robô
      - name: Set up JDK 25
        uses: actions/setup-java@v4
        with:
          java-version: '25'
          distribution: 'temurin'

      # Passo 3: Dá permissão de execução para o Maven Wrapper
      - name: Make mvnw executable
        run: chmod +x ./mvnw

      # Passo 4: Compila o projeto e gera o arquivo "app.jar"
      - name: Build with Maven
        run: ./mvnw clean package -DskipTests

      # Passo 5: Copia o "app.jar" para a sua VM na Azure
      - name: Copy JAR to VM
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.AZURE_VM_IP }}
          username: ${{ secrets.AZURE_VM_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          source: "target/app.jar"
          target: "/opt/routehelper-api/"

      # Passo 6: Conecta na VM via SSH e reinicia a API
      - name: Restart API Service on VM
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.AZURE_VM_IP }}
          username: ${{ secrets.AZURE_VM_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            # O script a seguir será executado dentro da sua VM
            
            # Procura pelo PID (Process ID) de qualquer processo java rodando a partir da pasta da api
            PID=$(ps -ef | grep '/opt/routehelper-api/app.jar' | grep -v grep | awk '{print $2}')
            
            # Se um PID for encontrado, o processo antigo é encerrado
            if [ -n "$PID" ]; then
              echo "Stopping old API process with PID: $PID"
              sudo kill $PID
              sleep 5 # Espera 5 segundos para garantir que a porta foi liberada
            fi
            
            echo "Starting new API process with app.jar"
            # Navega para a pasta da API
            cd /opt/routehelper-api/
            # Inicia a nova versão da API em background, como o usuário atual (não root), que é o dono da pasta
            nohup java -jar app.jar &