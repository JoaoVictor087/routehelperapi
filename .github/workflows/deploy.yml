# Nome do nosso workflow, que aparecerá na aba "Actions" do GitHub
name: Deploy API to Azure VM

# Gatilho: Define quando o workflow deve rodar.
# Neste caso, a cada push na branch "main".
on:
  push:
    branches: [ "main" ]

# Tarefas: Define o que o robô vai fazer.
jobs:
  build-and-deploy:
    # O robô vai usar uma máquina virtual temporária com Ubuntu para fazer o trabalho
    runs-on: ubuntu-latest

    steps: # A sequência de passos a serem executados
      # Passo 1: Baixa o seu código do repositório para a máquina do robô
      - name: Checkout Code
        uses: actions/checkout@v4

      # Passo 2: Configura o ambiente Java na máquina do robô
      - name: Set up JDK 25
        uses: actions/setup-java@v4
        with:
          java-version: '25'
          distribution: 'temurin'

      - name: Make mvnw executable
        run: chmod +x ./mvnw

      # Passo 3: Roda o comando de build do Maven para gerar o arquivo .jar
      - name: Build with Maven
        # O -DskipTests pula os testes para acelerar o deploy
        run: ./mvnw clean package -DskipTests

      # Passo 4: Copia o arquivo .jar gerado para a sua VM na Azure
      - name: Copy JAR to VM
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.AZURE_VM_IP }}
          username: ${{ secrets.AZURE_VM_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          source: "target/app.jar"
          target: "/opt/routehelper-api/" # Ajuste se o nome da sua pasta for diferente

      # Passo 5: Conecta na VM via SSH e reinicia a API
      - name: Restart API Service on VM
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.AZURE_VM_IP }}       # <-- ADICIONAR
          username: ${{ secrets.AZURE_VM_USER }} # <-- ADICIONAR
          key: ${{ secrets.SSH_PRIVATE_KEY }}    # <-- ADICIONAR
          script: |
          # Procura por qualquer processo .jar rodando na pasta da nossa api
            PID=$(ps -ef | grep '/opt/routehelper-api/.*\.jar' | grep -v grep | awk '{print $2}')
              if [ -n "$PID" ]; then
                sudo kill $PID
                sleep 5
              fi
  
              echo "Starting new API process with app.jar"
              cd /opt/routehelper-api/
              # O scp já terá substituído o app.jar antigo pelo novo.
              sudo nohup java -jar app.jar &